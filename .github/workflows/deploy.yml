name: CloudFormation Deploy Development
on:
  push:
    branches:
      - dev
    #paths:
    #  - '**.yml'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    #- name: Set Python Version
    #  uses: actions/setup-python@v2
    #  with:
    #    python-version: '3.8'
    #- name: Install cfn-python-lint
    #  run: pip install --no-cache-dir cfn-lint
    #- name: Execute Lint Check
    #  run: cfn-lint cfn/template.yml
    - name: cfn-lint-actions
      continue-on-error: true
      uses: scottbrenner/cfn-lint-action@master
      with:
        args: cfn/*.yml

  
  cfn-nag:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: install cfn_nag
      run: sudo gem install cfn-nag
    #- name: execute cfn_nag
    #  continue-on-error: true
    #  run: |
    #    cfn_nag_scan --input-path cfn
    - name: cfn-nag-actions
      continue-on-error: true
      uses: minchao/cfn-nag-action@master
      with:
        args: '--input-path cfn'
#  build:
#    needs: [lint, cfn-nag]
#    runs-on: ubuntu-latest
#    steps:
#    - name: Checkout
#      uses: actions/checkout@v2
#    - name: Configure AWS Credentials
#      uses: aws-actions/configure-aws-credentials@v1
#      with:
#        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#        aws-region: ap-northeast-1
#    - name: Deploy Cloudformation Stack
#      env:
#        STACK_NAME: createvpc-dev
#        TEMPLATE_NAME: template.yml
#      run: |
#        aws cloudformation deploy \
#          --stack-name ${STACK_NAME} \
#          --template-file ${TEMPLATE_NAME} \
#          --parameter-overrides Environment=development \
#          --no-fail-on-empty-changeset

  cfn-guard:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: install CloudFormation Guard
        env: 
          CFN_GUARD_VERSION: 1.0.0
        run: |
          wget https://github.com/aws-cloudformation/cloudformation-guard/releases/download/${CFN_GUARD_VERSION}/cfn-guard-linux-${CFN_GUARD_VERSION}.tar.gz
          tar -xvf cfn-guard-linux-${CFN_GUARD_VERSION}.tar.gz
      - name: check network template with CloudFormation Guard
        continue-on-error: true
        run: |
          ./cfn-guard-linux/cfn-guard check --template ./cfn/*.yml --rule_set ./cfn-guard-rules/ruleset

